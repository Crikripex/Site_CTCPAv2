<?php
/**
 * Created by PhpStorm.
 * User: crikripex
 * Date: 09/05/18
 * Time: 14:43
 */

namespace App\Entity;

use Doctrine\DBAL\Types\Type;
use Doctrine\DBAL\Platforms\AbstractPlatform;
use PhpParser\Node\Expr\Cast\Array_;


class MyEnumType extends Type
{
    protected $name;
    protected $values = array();

    /**
     * @ORM\Column(type="myenum")
     */

    public function getSQLDeclaration(array $fieldDeclaration, AbstractPlatform $platform)
    {
        $values = array_map(function($val) { return "'".$val."'"; }, $this->values);

        return "ENUM(".implode(", ", $values).")";
    }

    public function convertToPHPValue($value, AbstractPlatform $platform)
    {
        return $value;
    }

    public function convertToDatabaseValue($value, AbstractPlatform $platform)
    {
        if (!in_array($value, $this->values)) {
            throw new \InvalidArgumentException("Invalid '".$this->name."' value.");
        }
        return $value;
    }

    public function getName()
    {
        return $this->name;
    }

    public function requiresSQLCommentHint(AbstractPlatform $platform)
    {
        return true;
    }

    public function getMappedDatabaseTypes(AbstractPlatform $platform)
    {
        //return parent::getMappedDatabaseTypes($platform); // TODO: Change the autogenerated stub
        return self::getTypesMap();
    }


}